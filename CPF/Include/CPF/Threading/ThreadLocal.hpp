//////////////////////////////////////////////////////////////////////////
#pragma once

namespace CPF
{
	namespace Threading
	{
		//////////////////////////////////////////////////////////////////////////
		/// Create a thread local item.
		//////////////////////////////////////////////////////////////////////////
		class ThreadLocal
		{
		public:
			//////////////////////////////////////////////////////////////////////////
			ThreadLocal() : m_ThreadLocal(InvalidThreadLocal)
			{
				m_ThreadLocal = ::TlsAlloc();
			}

			~ThreadLocal()
			{
				::TlsFree(m_ThreadLocal);
			}

			//////////////////////////////////////////////////////////////////////////
			void* Get()
			{
				return ::TlsGetValue(m_ThreadLocal);
			}
			void Set(void* value)
			{
				::TlsSetValue(m_ThreadLocal, value);
			}

		private:
			//////////////////////////////////////////////////////////////////////////
			ThreadLocal_t m_ThreadLocal;
		};
	}
}
