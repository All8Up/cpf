Math
	Color 3-4, spaces?
	Half

	Distance
		Vector2 ->	Line2
					Ray2
					Segment2
					Circle
					Rectangle
					HalfSpace2
		Vector3 ->	Line3
					Ray3
					Segment3
					Sphere
					Cone
					Cylinder
					Capsule
		Some of the geometry types versus other geometry types.

	Intersect
		Ray2 ->		2D geometry
		Ray3 ->		3D geometry
		Certain geometry types versus other geometry types.

	Containment
		(eInside, eOutside, eIntersects)
		>0 area geometry versus points and other geometry

	Geometry
		Frustum2
		Frustum3
		Line2 - Unbounded
		Line3
		Ray2 - Bounded at start
		Ray3
		Segment2 - Bounded at both ends
		Segment3
		Circle (2D)
		Sphere (3D)
		Cone (3D)
		Cylinder (3D)
		Capsule (3D)
		Torus (3D)
		Rectangle (2D)
		Box (3D)
		HalfSpace2
		HalfSpace3


RayTracer rework:
{
	// Setup the ray tracer options.
	RayTracer::Options options;
	if (!ParseCommandLine(options, argc, argv))
	{
		CPF::Log(eError) << "Command line arguments incorrect.";
		return -1;
	}

	// Load the scene.
	RayTracer::Scene scene;
	{
		IO::Result fileResult = File::Create(options.mScene, StreamAccess::eRead);
		if (fileResult)
		{
			RayTracer::JsonSceneReader reader(fileResult.OK());
			IO::Result readResult = reader.Read(scene);
			if (!readResult)
			{
				CPF::Log(eError) << readResult;
				return -1;
			}
		}
	}

	// Get the rendersize or use a default.
	Vector2i renderSize = options.GetSize(Vector2i(400, 400));

	// Build an output buffer.
	RayTracer::Buffer outBuffer(renderSize);

	// Build a rendering context to run on.
	RayTracer::Context context(outBuffer, options, scene);


	context.Begin();

}
