import BlendStateDesc from CPF::Platform::Graphics;
import RasterizerStateDesc from CPF::Platform::Graphics;
import DepthStencilStateDesc from CPF::Platform::Graphics;
import InputLayoutDesc from CPF::Platform::Graphics;
import IndexStripCut from CPF::Platform::Graphics;
import TopologyType from CPF::Platform::Graphics;
import Format from CPF::Platform::Graphics;
import SampleDesc from CPF::Platform::Graphics;
import iResourceBinding from CPF::Platform::Graphics;

module CPF::Graphics;

interface iResourceBinding;
interface iShader;

struct PipelineStateDesc
{
	iShader* mpVertex = nullptr;
	iShader* mpPixel = nullptr;
	iShader* mpDomain = nullptr;
	iShader* mpHull = nullptr;
	iShader* mpGeometry = nullptr;
	BlendStateDesc mBlendState = default BlendStateDesc;
	u32 mSampleMask = -1 as u32;
	RasterizerStateDesc mRasterizerState = default RasterizerStateDesc;
	DepthStencilStateDesc mDepthStencil = default DepthStencilStateDesc;
	InputLayoutDesc mInputLayout = default InputLayoutDesc;
	IndexStripCut mIndexStripCut = IndexStripCut::eNone;
	TopologyType mTopology = TopologyType::eTriangle;
	s32 mRenderTargetCount = 0;
	Format mRenderTargetFormats[MaxRenderTargets] = {
		Format::eNone,
		Format::eNone,
		Format::eNone,
		Format::eNone,
		Format::eNone,
		Format::eNone,
		Format::eNone,
		Format::eNone
	};
	Format mDepthStencilFormat = Format::eNone;
	SampleDesc mSampleState = default SampleDesc;

	// Items not in the pipeline at this time.
	// StreamOutput
	// node mask
	// cache pipeline state
	// flags
};
